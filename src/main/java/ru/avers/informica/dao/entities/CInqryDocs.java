package ru.avers.informica.dao.entities;

import ru.avers.informica.entities.abstraction.CItem;
import ru.avers.informica.entities.dicts.CDict74InqryDocType;

import javax.persistence.*;

import static javax.persistence.FetchType.LAZY;

/**
 * Inqrydocs generated by hbm2java
 */
@Entity
@Table(name="INQRYDOCS")  // files - новая таблица (вложения)  [вторая реализация TODO]
@SequenceGenerator(name="SEQ_GEN", sequenceName="GEN_INQRYDOCS_ID")
public class CInqryDocs extends CItem {

    public final static String
            S_DOC_TYPE_CODE = "m_inqry_doc_type.m_code",
            S_INQRY = "m_inqry";

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ID_INQRY")
    private Inqry m_inqry;

    @ManyToOne(fetch= FetchType.LAZY)
    @JoinColumn(name="ID_TYPE_DOC")
    private CDict74InqryDocType m_inqry_doc_type;
    
    @Column(name = "DESCR")
    private String m_descr;

    @Lob
    @Basic(fetch=LAZY)
    @Column(name = "DATA")
    private byte[] m_data;

    @Column(name = "DATA_TYPE")
    private String m_data_type;

    public CInqryDocs(Inqry p_inqry, String p_data_type, byte[] p_data) {
        this(p_inqry, p_data_type, p_data, null);
    }
    public CInqryDocs(Inqry p_inqry, String p_data_type, byte[] p_data, String p_descr) {
        this(p_inqry, p_data_type, null, p_data, p_descr);
    }
    public CInqryDocs(String p_data_type, Integer p_id_doc_type, byte[] p_data) {
        this(p_data_type, p_id_doc_type, p_data, null);
    }
    public CInqryDocs(String p_data_type, Integer p_id_doc_type, byte[] p_data, String p_descr) {
        this(null, p_data_type, p_id_doc_type, p_data, p_descr);
    }
    public CInqryDocs(Inqry p_inqry, String p_data_type, Integer p_id_doc_type, byte[] p_data, String p_descr) {
        super(); 
        if(p_inqry != null) m_inqry = p_inqry;
        m_data_type = p_data_type;
        setInqryDocType(p_id_doc_type);
        m_data = p_data;
        m_descr = p_descr;
    }
    public CInqryDocs() { super(); }
    public CInqryDocs(Integer p_id) { super(p_id); }
	
    public Inqry getInqry() { return m_inqry; }
    public void setInqry(Inqry p_val) { m_inqry = p_val; }

    public CDict74InqryDocType getInqryDocType() { return m_inqry_doc_type; }
    private void setInqryDocType(Integer p_id) { if(p_id != null) setInqryDocType(new CDict74InqryDocType(p_id)); }
    public void setInqryDocType(CDict74InqryDocType dictsDetail) { this.m_inqry_doc_type = dictsDetail; }
    
    public String getDescr() { return m_descr; }
    
    public void setDescr(String p_val) { m_descr = p_val; }
    
    public byte[] getData() { return m_data; }
    public void setData(byte[] p_val) { m_data = p_val; }

    public String getDataType() { return m_data_type; }
    public void setDataType(String p_val) { m_data_type = p_val; }

}
