package ru.avers.informica.entities;

import ru.avers.informica.entities.abstraction.CItem;
import ru.avers.informica.entities.dicts.CDict74InqryDocType;

import javax.persistence.*;

/**
 * Inqrydocs generated by hbm2java
 */
@Entity
@Table(name="INQRYDOCS") // files - новая таблица (вложения)
@SequenceGenerator(name="SEQ_GEN", sequenceName="GEN_INQRYDOCS_ID")
public class Inqrydocs extends CItem {

    public final static String
            S_DOC_TYPE_CODE = "m_inqry_doc_type.m_code",
            S_INQRY = "m_inqrychldinuch";

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ID_INQRY")
    private Inqrychldinuch m_inqrychldinuch;

    @ManyToOne(fetch= FetchType.LAZY)
    @JoinColumn(name="ID_TYPE_DOC")
    private CDict74InqryDocType m_inqry_doc_type;
    
    @Column(name = "DESCR")
    private String m_descr;

    //Lob - мапится в jdbc BLOB, который в postgres мапится в oid
    //т.к. для хранения документов в бд postgres используется bytea, то аннотация закомментирована
    //firebird на lob не реагирует.
    //Рассмотреть - вынести данные документа в отдельную entity для реализации lazy загрузки
//    @Lob 
//    @Basic(fetch = FetchType.LAZY)
    @Column(name = "DATA")
    private byte[] m_data;

    @Column(name = "DATA_TYPE")
    private String m_data_type;

    public Inqrydocs(String p_data_type, Integer p_id_doc_type, byte[] p_data) {
        this(p_data_type, p_id_doc_type, p_data, null);
    }
    public Inqrydocs(String p_data_type, Integer p_id_doc_type, byte[] p_data, String p_descr) {
        super(); 
        m_data_type = p_data_type;
        setInqryDocType(p_id_doc_type);
        m_data = p_data;
        m_descr = p_descr;
    }
    public Inqrydocs() { super(); }
    public Inqrydocs(Integer p_id) { super(p_id); }
	
    public Inqrychldinuch getInqrychldinuch() {
        return this.m_inqrychldinuch;
    }
    
    public void setInqrychldinuch(Inqrychldinuch inqrychldinuch) {
        this.m_inqrychldinuch = inqrychldinuch;
    }

    public CDict74InqryDocType getInqryDocType() {
        return this.m_inqry_doc_type;
    }
    
    public void setInqryDocType(Integer p_id) { if(p_id != null) setInqryDocType(new CDict74InqryDocType(p_id)); }
    public void setInqryDocType(CDict74InqryDocType dictsDetail) { this.m_inqry_doc_type = dictsDetail; }
    
    public String getDescr() {
        return this.m_descr;
    }
    
    public void setDescr(String descr) {
        this.m_descr = descr;
    }
    
    public byte[] getData() {
        return this.m_data;
    }
    
    public void setData(byte[] data) {
        this.m_data = data;
    }

    public String getDataType()
    {
        return m_data_type;
    }

    public void setDataType(String p_data_type) {
        m_data_type = p_data_type;
    }

}
